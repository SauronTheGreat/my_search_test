require 'rubygems'
require 'rexml/document'
require 'google_custom_search'
require "net/http"

class SampleController < ApplicationController


  def index
    #this is the landing page for the app
    #the views contain only a simple search box

  end

  def search_results


    appId = "A867642CAB54C7AB4107D55CFAEC7D85017AEFD7" # This is the app id generated by bing! for me
    search = params[:q] #finding out the search terms
    search.sub(" ", "+") #in case of multiple terms join by +

    uri = URI.parse("http://api.search.live.net/xml.aspx?AppId=#{appId}&sources=Web&query=#{URI.escape(search)}")
                                                       #generating the required URL
    @xml_response = Net::HTTP.get_response(uri).body
                                                       #getting the response by parsing the generated URL
                                                       #(URL is as per docs in bing )
    @doc = REXML::Document.new(@xml_response)
                                                       #parsin the xml file with REXML
    @count=0
                                                       # a variable to count number of results
    @doc.elements.each_with_index("SearchResponse/web:Web/web:Results/web:WebResult") do |result, index|
      @count=@count+1
    end


    #declaration of variables we will need for further manipulation
    #note that @number_title,@number_url and @number_desc can be simple variables also but I have kept them as arrays because we can get that data for each result
    @final_display=Array.new(@count) { Array.new(4) } # a 2D array to store required  fileds of results
    @total=Array.new
    @number_desc=Array.new
    @number_title=Array.new
    @number_url=Array.new
    @ranks=Array.new

    #iterating through the results
    @doc.elements.each_with_index("SearchResponse/web:Web/web:Results/web:WebResult") do |result, index|
      @number_desc[index]=0
      @number_title[index]=0
      @number_url[index]=0
      @total[index]=0

      #get the title of the web page
      @final_display[index][0]= result.get_elements("web:Title")[0].text
      #search the number of times search term appears in the title
      result.get_elements("web:Title")[0].text.downcase.scan(params[:q].downcase) {
          |m| @number_title[index]=@number_title[index]+1
      }

       #get the description of the result as generated by the search engine
      @final_display[index][1]=result.get_elements("web:Description")[0].text
      #calculate the number of times search term appears in the description
      result.get_elements("web:Description")[0].text.downcase.scan(params[:q].downcase) {
          |m| @number_desc[index]=@number_desc[index]+1
      }


      #get the url of the result
      @final_display[index][2]=result.get_elements("web:Url")[0].text
      #calculate the number of times search term appears in the url
      result.get_elements("web:Url")[0].text.downcase.scan(params[:q].downcase) {
          |m| @number_url[index]=@number_url[index]+1
      }


      #get date time of the result as generated  by the search engine
      @final_display[index][3]=result.get_elements("web:DateTime")[0].text

      #calculate score of each result
      @final_display[index][4]=@number_title[index]+@number_url[index]+@number_desc[index]

      @total[index]=@number_title[index]+@number_url[index]+@number_desc[index]


    end

    #the loop below is used to calculate rank for each result
    i=0
    max=0
    @count.times do
      max=@total.first
      @total.each do |total|

        if total > max
          max=total
        end
      end
      @ranks[i]=@total.find_index(max)
      # @total.delete_at(@ranks[i])
      @total[@ranks[i]]=0
      i=i+1
    end


  end




end
